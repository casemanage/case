<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.security.manage.dao.PersonMapper" >
  <resultMap id="BaseResultMap" type="com.security.manage.model.Person" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TYPEID" property="typeid" jdbcType="INTEGER" />
    <result column="LEVELID" property="levelid" jdbcType="INTEGER" />
    <result column="SEX" property="sex" jdbcType="INTEGER" />
    <result column="BIRTH" property="birth" jdbcType="NVARCHAR" />
    <result column="PHOTOURL" property="photourl" jdbcType="VARCHAR" />
    <result column="IDCARD" property="idcard" jdbcType="VARCHAR" />
    <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="SERIALNO" property="serialno" jdbcType="VARCHAR" />
    <result column="CASECOMMENT" property="casecomment" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="INTEGER" />
    <result column="CREATORNAME" property="creatorname" jdbcType="VARCHAR" />
    <result column="ORGANNAME" property="organname" jdbcType="VARCHAR" />
    <result column="MACADDRESS" property="macaddress" jdbcType="VARCHAR" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" />
    <result column="levelName" property="levelName" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="DATE"/>
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="StatisticResultMap" type="com.security.manage.model.TypeStatistic" >
    <id column="totalCount" property="totalCount" jdbcType="INTEGER" />
    <result column="typeName" property="typeName" jdbcType="VARCHAR" /> 
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.security.manage.model.Person" extends="BaseResultMap" >
    <result column="TIMESPAN" property="timespan" jdbcType="BINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    p.ID, p.NAME, p.TYPEID, p.LEVELID, p.SEX, p.BIRTH, p.PHOTOURL, p.IDCARD, p.ADDRESS, p.SERIALNO, p.CASECOMMENT, 
    p.DESCRIPTION, p.CREATOR, p.CREATORNAME, p.ORGANNAME, p.MACADDRESS,p.createTime,p.telephone
  </sql>
  <sql id="Blob_Column_List" >
    p.TIMESPAN
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from MC_PERSON p
    where p.ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from MC_PERSON
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.security.manage.model.Person" useGeneratedKeys="true" keyProperty="id">
    insert into MC_PERSON (NAME, TYPEID, 
      LEVELID, SEX, BIRTH, 
      PHOTOURL, IDCARD, ADDRESS, 
      SERIALNO, CASECOMMENT, DESCRIPTION, 
      CREATOR, CREATORNAME, ORGANNAME, 
      MACADDRESS,createTime,telephone)
    values (#{name,jdbcType=VARCHAR}, #{typeid,jdbcType=INTEGER}, 
      #{levelid,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{birth,jdbcType=NVARCHAR}, 
      #{photourl,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{serialno,jdbcType=VARCHAR}, #{casecomment,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{creator,jdbcType=INTEGER}, #{creatorname,jdbcType=VARCHAR}, #{organname,jdbcType=VARCHAR}, 
      #{macaddress,jdbcType=VARCHAR},#{createtime,jdbcType=DATE}, #{telephone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.security.manage.model.Person" >
    insert into MC_PERSON
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="typeid != null" >
        TYPEID,
      </if>
      <if test="levelid != null" >
        LEVELID,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="birth != null" >
        BIRTH,
      </if>
      <if test="photourl != null" >
        PHOTOURL,
      </if>
      <if test="idcard != null" >
        IDCARD,
      </if>
      <if test="address != null" >
        ADDRESS,
      </if>
      <if test="serialno != null" >
        SERIALNO,
      </if>
      <if test="casecomment != null" >
        CASECOMMENT,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="creatorname != null" >
        CREATORNAME,
      </if>
      <if test="organname != null" >
        ORGANNAME,
      </if>
      <if test="macaddress != null" >
        MACADDRESS,
      </if>
      <if test="timespan != null" >
        TIMESPAN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        #{levelid,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=NVARCHAR},
      </if>
      <if test="photourl != null" >
        #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="serialno != null" >
        #{serialno,jdbcType=VARCHAR},
      </if>
      <if test="casecomment != null" >
        #{casecomment,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="creatorname != null" >
        #{creatorname,jdbcType=VARCHAR},
      </if>
      <if test="organname != null" >
        #{organname,jdbcType=VARCHAR},
      </if>
      <if test="macaddress != null" >
        #{macaddress,jdbcType=VARCHAR},
      </if>
      <if test="timespan != null" >
        #{timespan,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.security.manage.model.Person" >
    update MC_PERSON
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null" >
        TYPEID = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        LEVELID = #{levelid,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        BIRTH = #{birth,jdbcType=NVARCHAR},
      </if>
      <if test="photourl != null" >
        PHOTOURL = #{photourl,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        IDCARD = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="serialno != null" >
        SERIALNO = #{serialno,jdbcType=VARCHAR},
      </if>
      <if test="casecomment != null" >
        CASECOMMENT = #{casecomment,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=INTEGER},
      </if>
      <if test="creatorname != null" >
        CREATORNAME = #{creatorname,jdbcType=VARCHAR},
      </if>
      <if test="organname != null" >
        ORGANNAME = #{organname,jdbcType=VARCHAR},
      </if>
      <if test="macaddress != null" >
        MACADDRESS = #{macaddress,jdbcType=VARCHAR},
      </if>
      <if test="timespan != null" >
        TIMESPAN = #{timespan,jdbcType=BINARY},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="description != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.security.manage.model.Person" >
    update MC_PERSON
    set NAME = #{name,jdbcType=VARCHAR},
      TYPEID = #{typeid,jdbcType=INTEGER},
      LEVELID = #{levelid,jdbcType=INTEGER},
      SEX = #{sex,jdbcType=INTEGER},
      BIRTH = #{birth,jdbcType=NVARCHAR},
      PHOTOURL = #{photourl,jdbcType=VARCHAR},
      IDCARD = #{idcard,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      SERIALNO = #{serialno,jdbcType=VARCHAR},
      CASECOMMENT = #{casecomment,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=INTEGER},
      CREATORNAME = #{creatorname,jdbcType=VARCHAR},
      ORGANNAME = #{organname,jdbcType=VARCHAR},
      MACADDRESS = #{macaddress,jdbcType=VARCHAR},
      TIMESPAN = #{timespan,jdbcType=BINARY}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.security.manage.model.Person" >
    update MC_PERSON
    set NAME = #{name,jdbcType=VARCHAR},
      TYPEID = #{typeid,jdbcType=INTEGER},
      LEVELID = #{levelid,jdbcType=INTEGER},
      SEX = #{sex,jdbcType=INTEGER},
      BIRTH = #{birth,jdbcType=NVARCHAR},
      PHOTOURL = #{photourl,jdbcType=VARCHAR},
      IDCARD = #{idcard,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      SERIALNO = #{serialno,jdbcType=VARCHAR},
      CASECOMMENT = #{casecomment,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      CREATOR = #{creator,jdbcType=INTEGER},
      CREATORNAME = #{creatorname,jdbcType=VARCHAR},
      ORGANNAME = #{organname,jdbcType=VARCHAR},
      MACADDRESS = #{macaddress,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <sql id="sql_query">
  	from MC_PERSON p left join MC_PERSON_TYPE pt on p.TYPEID = pt.id
  					 left join MC_PERSON_LEVEL pl on p.LEVELID = pl.id
  	where 1=1
  	<if test="searchName != null and searchName !=''" >
	      and ( 
	      	p.NAME like '%#{searchName}%'
	      	OR 
	      	p.ADDRESS like '%#{searchName}%'
	      	OR 
	      	p.SERIALNO like '%#{searchName}%'
	      )
	 </if>
    order by p.ID desc 
  </sql>
  
  
  <select id="getPersonList" parameterType="com.security.manage.model.Person" resultMap="BaseResultMap" >
  	select 
  	<include refid="Base_Column_List"/>,
    <include refid="Blob_Column_List" />,
    pt.name as typeName,
    pl.name as levelName
  	from 
  	(select *, ROW_NUMBER() OVER(Order by b.ID DESC ) AS RowNumber from MC_PERSON as b) as p
  	left join MC_PERSON_TYPE pt on p.TYPEID = pt.id
  	left join MC_PERSON_LEVEL pl on p.LEVELID = pl.id
  	where 1=1
  	<if test="searchName != null and searchName !=''" >
	      and ( 
	      	p.NAME like '%${searchName}%'
	      	OR 
	      	p.ADDRESS like '%${searchName}%'
	      	OR 
	      	p.SERIALNO like '%${searchName}%'
	      )
	</if>
	<if test="creatorname != null and creatorname != ''">
	 and 
	 <![CDATA[p.CREATORNAME =#{creatorname,jdbcType=VARCHAR} ]]>
	</if>
  	<if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
   		and RowNumber BETWEEN (#{pageStart} + 1) and (#{pageSize} + #{pageStart})
   	</if>
  </select>
  <select id="getTotal" parameterType="com.security.manage.model.Person" resultType="java.lang.Integer">
  	select count(*)
  	from MC_PERSON p 
  	where 1=1
  	<if test="searchName != null and searchName !=''" >
	      and ( 
	      	p.NAME like '%${searchName}%'
	      	OR 
	      	p.ADDRESS like '%${searchName}%'
	      	OR 
	      	p.SERIALNO like '%${searchName}%'
	      )
	</if>
  </select>
  
  
  <select id="getExistPersonList" parameterType="com.security.manage.model.Person" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/>
  	from MC_PERSON p
  	where 1=1 
  	<if test="idcard != null">
  		and p.IDCARD = #{idcard,jdbcType=VARCHAR}
  	</if>
  	<if test="id != null">
  		and p.id != #{id,jdbcType=INTEGER}
  	</if>
  </select>
  <select id="getPersonTypeCountList" resultMap="StatisticResultMap" >
  	select COUNT(*) as totalCount,pt.name as typeName from MC_PERSON p
		left join MC_PERSON_TYPE pt on p.typeId = pt.id
		group by pt.name
    </select>
  <select id="getPersonStationCountList" resultMap="StatisticResultMap" >
  	select COUNT(*) as totalCount,p.organname as typeName from MC_PERSON p 
		group by p.organname
    </select>
</mapper>
